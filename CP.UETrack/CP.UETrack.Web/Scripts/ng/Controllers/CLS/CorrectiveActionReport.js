var ResponsibilityValues = "";
var priorityvalues = "";
var statusvalues = "";
var rowNum = 2;
var rowNum2 = 1;
var FileTypeValues = "";
$(document).ready(function () {

    //****************************************** getting Dropdowns from Load *********************************************

    $.get("/api/CLSCorrectiveActionReport/Load")
        .done(function (result) {
            var loadResult = JSON.parse(result);
            FileTypeValues = "<option value='' Selected>" + "Select" + "</option>";
            priorityvalues="<option value='' Selected>" + "Select" + "</option>";
            ResponsibilityValues="<option value='0' Selected>" + "Select" + "</option>";
            Indicatorsvalues="<option value='' Selected>" + "Select" + "</option>";

            for (var i = 0; i < loadResult.CARPriorityValues.length; i++) {
                priorityvalues += "<option value=" + loadResult.CARPriorityValues[i].LovId + ">" + loadResult.CARPriorityValues[i].FieldValue + "</option>"
            }
            $("#Priority").append(priorityvalues);

            for (var i = 0; i < loadResult.CARStatusValues.length; i++) {
                statusvalues += "<option value=" + loadResult.CARStatusValues[i].LovId + ">" + loadResult.CARStatusValues[i].FieldValue + "</option>"       
            }
            $("#txtStatus").append(statusvalues);

            for (var i = 0; i < loadResult.CARResponsibilityValues.length; i++) {
                ResponsibilityValues += "<option value=" + loadResult.CARResponsibilityValues[i].LovId + ">" + loadResult.CARResponsibilityValues[i].FieldValue + "</option>"
            }
            $("#txtResponsibility1").append(ResponsibilityValues);

            for (var i = 0; i < loadResult.FileTypeLovs.length; i++) {
                FileTypeValues += "<option value=" + loadResult.FileTypeLovs[i].LovId + ">" + loadResult.FileTypeLovs[i].FieldValue + "</option>"
            }
            $("#ddlFileType1").append(FileTypeValues);

            AutogeneratedCode();
            $('#myPleaseWait').modal('hide');
        })

        .fail(function () {
            $('#myPleaseWait').modal('hide');
            $("div.errormsgcenter").text(Messages.COMMON_FAILURE_MESSAGE);
            $('#errorMsg').css('visibility', 'visible');
        });


    //clicking on 2nd tab restrict
    $(".nav-tabs").click(function () {
        var primaryId = $('#primaryID').val();
        if (primaryId == 0 || primaryId == null || primaryId == undefined || primaryId == "" || primaryId == "0") {
            bootbox.alert(Messages.SAVE_FIRST_TABALERT);
            return false;
        }
    });

 
//****************************************** AutoPopulate for CAR Feilds**********************************************
    var CompanyStaffFetchObj = {
        SearchColumn: 'txtAssignee-StaffName',//Id of Fetch field
        ResultColumns: ["StaffMasterId-Primary Key", 'StaffName-Staff Name'],//Columns to be displayed
        FieldsToBeFilled: ["hdnCompanyStaffId-StaffMasterId", "txtAssignee-StaffName"]//id of element - the model property
    };
    $('#txtAssignee').on('input propertychange paste keyup', function (event) {
        DisplayFetchResult('divFetch7', CompanyStaffFetchObj, "/Api/Fetch/CompanyStaffFetch", "UlFetch7", event, 1);//1 -- pageIndex
    });

    var VerifiedbyfetchObj = {
        SearchColumn: 'txtVB-StaffName',//Id of Fetch field
        ResultColumns: ["StaffMasterId-Primary Key", 'StaffName-Staff Name'],//Columns to be displayed
        FieldsToBeFilled: ["hdnVerifiedbyId-StaffMasterId", "txtVB-StaffName"]//id of element - the model property
    };

    $('#txtVB').on('input propertychange paste keyup', function (event) {
        DisplayFetchResult('divFetch2', VerifiedbyfetchObj, "/Api/Fetch/CompanyStaffFetch", "UlFetch2", event, 1);//1 -- pageIndex
    });

    var IssuerFetchObj = {
        SearchColumn: 'txtIssuer-StaffName',//Id of Fetch field
        ResultColumns: ["StaffMasterId-Primary Key", 'StaffName-Staff Name'],//Columns to be displayed
        FieldsToBeFilled: ["hdnIssuerId-StaffMasterId", "txtIssuer-StaffName"]//id of element - the model property
    };

    $('#txtIssuer').on('input propertychange paste keyup', function (event) {
        DisplayFetchResult('divFetch4', IssuerFetchObj, "/Api/Fetch/CompanyStaffFetch", "UlFetch4", event, 1);//1 -- pageIndex
    });


    var followupCARFetchObj = {
        SearchColumn: 'txtFUC-CARNo',
        ResultColumns: ["CARId-Primary Key", 'CARNo-CARNo'],
        FieldsToBeFilled: ["hdnFollowupcarId-CARId", "txtFUC-CARNo"]
    };

    $('#txtFUC').on('input propertychange paste keyup', function (event) {
        DisplayFetchResult('divFetch8', followupCARFetchObj, "/api/CLSCorrectiveActionReport/CARNoFetch", "UlFetch8", event, 1);//1 -- pageIndex
    });

    //var FollowUpCarFetchObj = {
    //    SearchColumn: 'txtFUC-FollowUpCar',//Id of Fetch field
    //    ResultColumns: ["CARId-Primary Key", 'CARNo-CARNo'],
    //    FieldsToBeFilled: ["hdnFollowupcarId-CARId", "txtFUC-FollowUpCar"]
    //};
    //$('#txtFUC').on('input propertychange paste keyup', function (event) {
    //    DisplayFetchResult('divFetch8', FollowUpCarFetchObj, "/api/CLSCorrectiveActionReport/CARNoFetch", "UlFetch8", event, 1);//1 -- pageIndex
    //});

    //var FollowUpCarFetchObj = {
    //    SearchColumn: 'txtFUC-StaffName',//Id of Fetch field
    //    ResultColumns: ["StaffMasterId-Primary Key", 'StaffName-Staff Name'],//Columns to be displayed
    //    FieldsToBeFilled: ["hdnFollowupcarId-StaffMasterId", "txtFUC-StaffName"]//id of element - the model property
    //};

    //$('#txtFUC').on('input propertychange paste keyup', function (event) {
    //    DisplayFetchResult('divFetch8', FollowUpCarFetchObj, "/Api/Fetch/CompanyStaffFetch", "UlFetch8", event, 1);//1 -- pageIndex
    //});

    $(body).on('input propertychange paste keyup', '.responsiblepersoncode1', function (event) {
        var controlld = event.target.id;
        var id = controlld.slice(14, 16);

        var responsibleFetchObj = {
            SearchColumn: 'txtResponsible' + id + '-StaffName',//Id of Fetch field
            ResultColumns: ['StaffMasterId-Primary Key', 'StaffName-StaffName'],
            FieldsToBeFilled: ['hdnresponsibleId' + id + '-StaffMasterId', 'txtResponsible' + id + '-StaffName']
        };


        if ($('#txtResponsibility1').find(":selected").text() == 'Facility') {
            DisplayFetchResult('divFetchId' + id, responsibleFetchObj, "/Api/Fetch/FacilityStaffFetch", 'UlFetch' + id, event, 1);//1 -- pageIndex 
        }
        else if ($('#txtResponsibility1').find(":selected").text() == 'Company'){

            DisplayFetchResult('divFetchId' + id, responsibleFetchObj, "/Api/Fetch/CompanyStaffFetch", 'UlFetch' + id, event, 1);//1 -- pageIndex 
        }

        //DisplayFetchResult('divFetchId' + id, responsibleFetchObj, "/Api/Fetch/CompanyStaffFetch", 'UlFetch' + id, event, 1);//1 -- pageIndex 
    });
 

    //*****************************************PoP-Up functionality for CAR *************************************************

    followupCARSearchObj = {
        Heading: "Follow-up CAR Details",//Heading of the popup
        SearchColumns: ['CARNumber-CAR Number'],//ModelProperty - Space seperated label value
        ResultColumns: ["CarId-Primary Key", 'CARNumber-CAR Number'],//Columns to be returned for display
        AdditionalConditions: ["CarIdOriginal-primaryID", "IndicatorId-selQAPIndicatorId"],
        FieldsToBeFilled: ["hdnFollowupcarId-CarId", "txtFollowupCARNo-CARNumber", "txtFromDate-FromDate", "txtToDate-ToDate"]
    };

    $('#spnPopup-followupCAR').click(function () {
        DisplaySeachPopup('divSearchPopup', followupCARSearchObj, "/api/Search/FollowupCarFetch");
    });

    companyRepresentativeAssigneeSearchObj = {
        Heading: "Assignee Details",//Heading of the popup
        SearchColumns: ['StaffName-Staff Name'],//ModelProperty - Space seperated label value
        ResultColumns: ["StaffMasterId-Primary Key", 'StaffName-Staff Name'],//Columns to be returned for display
        FieldsToBeFilled: ["hdnCompanyStaffId-StaffMasterId", "txtAssignee-StaffName"]//id of element - the model property--, , 
    };

    $('#spnPopup-Assignee').click(function () {
        DisplaySeachPopup('divSearchPopup', companyRepresentativeAssigneeSearchObj, "/api/Search/CompanyStaffSearch");
    });

    companyRepresentativeIssuerSearchObj = {
        Heading: "Issuer Details",//Heading of the popup
        SearchColumns: ['StaffName-Staff Name'],//ModelProperty - Space seperated label value
        ResultColumns: ["StaffMasterId-Primary Key", 'StaffName-Staff Name'],//Columns to be returned for display
        FieldsToBeFilled: ["hdnIssuerId-StaffMasterId", "txtIssuer-StaffName"]//id of element - the model property--, , 
    };

    $('#spnPopup-Issuer').click(function () {
        DisplaySeachPopup('divSearchPopup', companyRepresentativeIssuerSearchObj, "/api/Search/CompanyStaffSearch");
    });


    //********************************************** Enable feilds based on dropdown ***********************************
            
    //$('body').on('change', '.Response', function (e) {
      
    //    var Id = event.target.id.slice(17, 19);
    //    var a = $('#' + event.target.id + ' option:selected').text();
    //    //if (a.options[a.options.selectedIndex].text == 1) {
    //    if (a == "Facility" || a == "Company") {
    //        $('#txtResponsible' + Id + '').prop("disabled", false);

    //    }
    //    else {
    //        $('#txtResponsible' + Id + '').prop("disabled", true);
    //    }

    //});
  
    $('.Indicator').on('change', function () {

        var Indicator = $('#txtIndicators option:selected').text();
        if (Indicator !=="Select" ) {
           
            $("#txtFUC").prop("disabled", false).val('');
        }
        else {
            $("#txtFUC").prop("disabled", true).val('');
        }
    });
   
    $(body).on('input propertychange paste keyup', function (event) {
      
        $('.CARStatus').on('change', function () {
      
            var id = event.target.id.slice(22, 23);
            var a = $('#txtStatus' + id + '')[0];
            if (a.options[a.options.selectedIndex].text == 'Open') {
                $("#txtVD").prop("disabled", true).val('');
                $("#txtVB").prop("disabled", true).val('');
            }
            else {
                $("#txtVD").prop("disabled", false).val('');
                $("#txtVB").prop("disabled", false).val('');

                $('#txtVD').datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y'
                });
            }
        });
    });
   

    //********************************************** Save Functionality of CAR Tab ***********************************************

    $("#btnSave, #btnSaveandAddNew").click(function () {

        $("div.errormsgcenter").text("");
        var CurrentbtnID = $(this).attr("Id");
        $('#errorMsg').css('visibility', 'hidden');
        
        var isFormValid = formInputValidation("formCorrectiveAction", 'save');
        if (!isFormValid) {
            $("div.errormsgcenter").text(Messages.INVALID_INPUT_MESSAGE);
            $('#errorMsg').css('visibility', 'visible');
            return false;
        }
        var primaryId = 0;
        if ($("#primaryID").val() != null) {
            primaryId = $("#primaryID").val();

        }
        var obj = {
            CARId: primaryId,
            CustomerId: $('#selCustomerLayout').val(),
            FacilityId: $('#selFacilityLayout').val(),
            CARGeneration: $("#txtCARGeneration").val(),
            CARNo: $("#txtCNo").val(),
            Indicator: $("#txtIndicators").val(),
            CARDate: $("#txtCDate").val(),
            CARPeriodFrom: $("#txtCPeriodFrom").val(),
            CARPeriodTo: $("#txtCPeriodTo").val(),
            FollowUpCAR: $("#txtFUC").val(),
            Assignee: $("#txtAssignee").val(),
            ProblemStatement: $("#txtPS").val(),
            RootCause: $("#txtRC").val(),
            Solution: $("#txtSolution").val(),
            Priority: $("#Priority").val(),
            Status: $("#txtStatus").val(),
            Issuer: $("#txtIssuer").val(),
            CARTargetDate: $("#txtCTD").val(),
            VerifiedDate: $("#txtVD").val(),
            VerifiedBy: $("#txtVB").val(),
            Remarks: $("#txtRemarks").val(),
            
            CARActivityList: []
        }

        $("#tbodyActivity  tr").each(function () {

            var CARObj = {};
            CARObj.CARActivityId = $(this).find("[id^=hdnActivityId]")[0].value;
            CARObj.Activity = $(this).find("[id^=txtActivity]")[0].value;
            CARObj.StartDate = $(this).find("[id^=txtSD]")[0].value;
            CARObj.TargetDate = $(this).find("[id^=txtTD]")[0].value;
            CARObj.ActualCompletionDate = $(this).find("[id^=txtACD]")[0].value;
            CARObj.Responsibility = $(this).find("[id^=txtResponsibility]")[0].value;
            CARObj.ResponsiblePerson = $(this).find("[id^=txtResponsible]")[0].value;
            CARObj.isDeleted = $(this).find('input:checkbox[id^=isDelete]').prop("checked");

            obj.CARActivityList.push(CARObj);

        })
     
            $.post("/Api/CLSCorrectiveActionReport/Save", obj, function (response) {
                var result = JSON.parse(response);   
                $("#primaryID").val(result.CARId);
                showMessage('Corrective Action Report', CURD_MESSAGE_STATUS.SS);

                $("#grid").trigger('reloadGrid');
                if (CurrentbtnID == "btnSaveandAddNew") {
                    EmptyFields();
                    showMessage('Corrective Action Report', CURD_MESSAGE_STATUS.SS);
                }
                else {
                    fillDetails(result);
                }
            },
                "json")
                .fail(function (response) {

                    var errorMessage = "";
                    if (response.status == 400) {
                        errorMessage = response.responseJSON;
                    }
                    else {
                        errorMessage = Messages.COMMON_FAILURE_MESSAGE(response);
                    }
                    $("div.errormsgcenter").text(errorMessage);
                    $('#errorMsg').css('visibility', 'visible');

                    $('#btnSave').attr('disabled', false);

                });
               
    });

    $("#btnCancel").click(function () {
        bootbox.confirm({
            message: Messages.Reset_Alert_CONFIRMATION,
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-primary'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-default'
                }
            },
            callback: function (result) {
                if (result) {
                    EmptyFields();
                  
                }
                else {
                    $('#myPleaseWait').modal('hide');
                }
                //console.log('This was logged in the callback: ' + result);
            }
        });
        
    });
   
    $('#txtIndicator').on('change', function () {

        $('#indicator').removeClass('has-error');
    });
    $('#txtCDate').keypress(function () {

        $('#date').removeClass('has-error');
    });
    $('#txtAssignee').keypress(function () {

        $('#assignee').removeClass('has-error');
    });
    $('#txtPS').keypress(function () {

        $('#problem').removeClass('has-error');
    });
    $('#txtRC').keypress(function () {

        $('#cause').removeClass('has-error');
    });
    $('#txtSolution').keypress(function () {

        $('#solution').removeClass('has-error');
    });
    $('#Priority').on('change', function () {

        $('#priorit').removeClass('has-error');
    });
    $('#txtStatus').on('change', function () {

        $('#status').removeClass('has-error');

        var a = $('#status' + ' option:selected').text();

        if (a == "Open") {
            $("#txtVD").prop("disabled", true);
            $("#txtVB").prop("disabled", true);

            $('[name="ActualCompletion"]').prop("disabled", true);
           
        }
        else {
            $("#txtVD").prop("disabled", false);
            $("#txtVB").prop("disabled", false);
            $('[name="ActualCompletion"]').prop("disabled", false);
        }
    });
    $('#txtRemarks').keypress(function () {

        $('#remarks').removeClass('has-error');
    });
    $('#txtCTD').keypress(function () {

        $('#target').removeClass('has-error');
    });
    $('#txtActivity').keypress(function () {

        $('#activity').removeClass('has-error');
    });
    $('#txtSD').keypress(function () {

        $('#sd').removeClass('has-error');
    });
    $('#txtTD').keypress(function () {

        $('#td').removeClass('has-error');
    });
    $('#txtResponsibility').keypress(function () {
        $('#response').removeClass('has-error');
    });
    $('#txtCDate').on('change', function () {
        $('#date').removeClass('has-error');
        $('#errorMsg').css('visibility', 'hidden');
    });  
    $('#txtCTD').on('change', function () {

        $('#target').removeClass('has-error');
        $('#errorMsg').css('visibility', 'hidden');
    });
    $('#txtCDate').change('change', function () {

        $('#date').removeClass('has-error');
    });
    $('#txtCTD').change('change', function () {

        $('#target').removeClass('has-error');
    });

    //******************************************Add Rows for CARDetails**************************************************
   
    $("#addActivity").click(function () {
        addActivity(rowNum);        
        rowNum = rowNum + 1;
    });

   //******************************************************Auto Generated Code****************************************************
    
    $("#deleteActivity").click(function () {
        bootbox.confirm({
            message: 'Do you want to delete a row?',
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-primary'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-default'
                }
            },
            callback: function (result) {
                if (result) {
                    if ($("input[type='checkbox']:checked").length > 0) {
                        $("#tbodyActivity tr").find('input[name="isDelete"]').each(function () {
                            if ($(this).is(":checked")) {
                                if ($(this).closest("tr").find("[id^=hdnActivityId]").val() == 0) {
                                    $(this).closest("tr").remove();
                                }
                            }
                        });
                    }
                    else
                        bootbox.alert("Please select atleast one row !");
                }
                else {
                    $('#myPleaseWait').modal('hide');
                }
                //console.log('This was logged in the callback: ' + result);
            }
        });

    });
    
    $("#btnSaveAttachment").click(function () {

            $("div.errormsgcenter").text("");
            var CurrentbtnID = $(this).attr("Id");
            $('#errorMsg1').css('visibility', 'hidden');
            var isFormValid = formInputValidation("formAttachment", 'save');
            if (!isFormValid) {

                $("div.errormsgcenter").text(Messages.INVALID_INPUT_MESSAGE);
                $('#errorMsg1').css('visibility', 'visible');

                return false;
            }
           var primaryId = 0;
           if ($("#primaryID").val() != null) {
            primaryId = $("#primaryID").val();

           }
            var obj = {
                CARId: primaryId,              
                CARAttachmentList: []

            }

           $('#tbodyAttachments  tr').each(function () {
                var CAR = {};
                CAR.AttachmentId = $(this).find("[id^=hdnAttachmentId]")[0].value;
                CAR.FileType = $(this).find("[id^=ddlFileType]")[0].value;
                CAR.FileName = $(this).find("[id^=txtFileName]")[0].value;
               if ($(this).find("[id^=txtAttachment]")[0].files.length != 0) {
                   CAR.AttachmentName = $(this).find("[id^=txtAttachment]")[0].files[0].name;
               }
                CAR.FilePath = $(this).find("[id^=icon]")[0].pathname;
                CAR.isDeleted = $(this).find('input:checkbox[id^=isDelete]').prop("checked");
                obj.CARAttachmentList.push(CAR);
               
            });

            $.post("/api/CLSCorrectiveActionReport/AttachmentSave", obj, function (response) {

                var result = JSON.parse(response);
                showMessage('Corrective Action Report Attachmentment', CURD_MESSAGE_STATUS.SS);
                //fillDetails(result);

            },
                "json")
                .fail(function (response) {

                    var errorMessage = "";
                    if (response.status == 400) {
                        errorMessage = response.responseJSON;
                    }
                    else {
                        errorMessage = Messages.COMMON_FAILURE_MESSAGE(response);
                    }
                    $("div.errormsgcenter").text(errorMessage);
                    $('#errorMsg1').css('visibility', 'visible');

                    $('#btnSave').attr('disabled', false);

                });
        });
     
        
    $("#addAttachment").click(function () {
        rowNum2 = rowNum2 + 1;
        addAttachment(rowNum2); 
        
      });

    $("#deleteAttachment").click(function () {

            bootbox.confirm({
                message: 'Do you want to delete a row?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-default'
                    }
                },
                callback: function (result) {
                    if (result) {
                        if ($("input[type='checkbox']:checked").length > 0) {
                            $("#tbodyAttachments tr").find('input[name="isDelete"]').each(function () {
                                if ($(this).is(":checked")) {
                                    if ($(this).closest("tr").find("[id^=hdnAttachmentId]").val() == 0) {
                                        $(this).closest("tr").remove();
                                    }
                                }
                            });
                        }
                        else
                            bootbox.alert("Please select atleast one row !");
                    }
                    else {
                        $('#myPleaseWait').modal('hide');
                    }
                }
            });
        });

     $('body').on('change', '.fileAttachment', function (e) {
            var AttachIdId1 = event.target.id;

            var id = AttachIdId1.slice(13, 15);
            var fileUpload = $(this).get(0);
            var files = fileUpload.files;

            var fileData = new FormData();

            var d = new Date();
            var day = d.getDate();
            var month = d.getMonth() + 1;
            var year = d.getFullYear();
            if (day < 10) {
                day = "0" + day;
            }
            if (month < 10) {
                month = "0" + month;
            }
            var fileName = "CAR_" + year + month + day + "_" + Math.floor(Math.random() * 100000);

            fileData.append(fileName, files[0]);

            $.ajax({
                url: '/api/Common/FileUpload',
                type: "POST",
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data  
                data: fileData,
                success: function (result) {

                    if (result == "File Uploaded Successfully!") {

                        $('#icon' + id).remove();
                        if (id >= 1) {
                            $('#cell' + id).append(
                                '<a href="" style="color:cornflowerblue" download="" id="icon' + id + '"><span style="text-align:center"><i class="fa fa-download" style="font-size:15px;"></i></span> </a>'
                            );
                        }
                        else {
                            $('#cell').append(
                                '<a href="" style="color:cornflowerblue" download="" id="icon"><span style="text-align:center"><i class="fa fa-download" style="font-size:15px;"></i></span> </a>'
                            );
                        }

                        var testFileName = $('#txtAttachment' + id).val();
                        var extn = testFileName.split('.').pop();

                        $("#icon" + id).attr("href", "../uploads/attachments/" + fileName + "." + extn);
                    }
                },
                error: function (err) {

                    var errorMessage = "";
                    if (err.status == 400) {
                        errorMessage = response.responseJSON;
                    }
                    else {
                        errorMessage = Messages.COMMON_FAILURE_MESSAGE(err);
                    }
                    $("div.errormsgcenter").text(errorMessage);
                    $('#errorMsg').css('visibility', 'visible');
                    $('#btnSave').attr('disabled', false);
                }
            });

        });

    
    $('#liHistory').unbind('click');

    $('#liHistory').click(function () {

        $('#errorMsgHistory').css('visibility', 'hidden');
        var rc = $("#txtIndicators option:selected").text();
        $('#selQAPIndicatorIdHistory option').remove();
        $('#selQAPIndicatorIdHistory').append('<option id="History" value="">' + rc + '</option>');
        $('#txtCARNumberHistory').val($('#txtCNo').val());
        $('#txtCARDateHistory').val($('#txtCDate').val());

        var primaryId = $('#primaryID').val();
        if (primaryId == 0) {
            bootbox.alert("CAR details must be saved before entering additional information");
            return false;
        } else if ($('#hdnIsAutoCarEdit').val() == 'true') {
            bootbox.alert("CAR details must be saved before entering additional information");
            return false;
        }

        //$('#myPleaseWait').modal('show');
        $.get("/api/CLSCorrectiveActionReport/GetCARHistoryDetails/" + primaryId)
            .done(function (response) {

                var result = JSON.parse(response);
                $('.tablerow1').remove();
                
                AddHistoryDetails();

                $('#txtCARStatus1').val(result.StatusValue);
                $('#txtRootCause1').val(result.RootCause);
                $('#txtSolution1').val(result.Solution);
                $('#txtRemarks1').val(result.Remarks);

            })
            .fail(function (response) {

                $("div.errormsgcenter").text(Messages.COMMON_FAILURE_MESSAGE(response));
                $('#errorMsgHistory').css('visibility', 'visible');

            });
    });
    
    $("#btnHistoryCancel").click(function () {
        bootbox.confirm({
            message: Messages.Reset_Alert_CONFIRMATION,
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-primary'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-default'
                }
            },
            callback: function (result) {
                if (result) {
                    ClearFields();

                }
                else {
                    $('#myPleaseWait').modal('hide');
                }
                //console.log('This was logged in the callback: ' + result);
            }
        });

    });
    
});

$("#jQGridCollapse1").click(function () {
    // $(".jqContainer").toggleClass("hide_container");
    var pro = new Promise(function (res, err) {
        $(".jqContainer").toggleClass("hide_container");
        res(1);
    })
    pro.then(
        function resposes() {
            setTimeout(() => $(".content").scrollTop(3000), 1);
        })
})

function EmptyFields() {

    $('#formCorrectiveAction')[0].reset();
    $("#primaryID").val(0);

    $('#errorMsg').css('visibility', 'hidden');
    var i = 1;
    $("#tbodyActivity").find('tr').each(function () {
        if (i > 1) {
            $(this).remove();
        }
        i += 1;
    });
    $('#indicator').removeClass('has-error');
    $('#date').removeClass('has-error');
    $('#falup').removeClass('has-error');
    $('#txtFUC').removeClass('has-error');
    $('#assignee').removeClass('has-error');
    $('#problem').removeClass('has-error');
    $('#cause').removeClass('has-error');
    $('#solution').removeClass('has-error');
    $('#priorit').removeClass('has-error');
    $('#status').removeClass('has-error');
    $('#issuer').removeClass('has-error');
    $('#target').removeClass('has-error');
    $('#remarks').removeClass('has-error');
    $('#activity').removeClass('has-error');
    $('#sd').removeClass('has-error');
    $('#td').removeClass('has-error');
    $('#response').removeClass('has-error');
    $("div.errormsgcenter").text("");
    $('#errorMsg').css('visibility', 'hidden');

    $("#btnSave").show();
    $("#btnSaveandAddNew").show();
    AutogeneratedCode();
    disableFields('false');
}

function LinkClicked(id) {

    $(".content").scrollTop(1);
    $('.nav-tabs a:first').tab('show');
    $("#formBemsBlock :input:not(:button)").parent().removeClass('has-error');
    $("div.errormsgcenter").text("");
    $('#errorMsg').css('visibility', 'hidden');
    var action = "";
    $('#primaryID').val(id);
    var hasEditPermission = Enumerable.From(JSON.parse($('#ActionPermissionValues').val())).Any("$.ActionPermissionName=='Edit'");
    var hasViewPermission = Enumerable.From(JSON.parse($('#ActionPermissionValues').val())).Any("$.ActionPermissionName=='View'");
    var hasDeletePermission = Enumerable.From(JSON.parse($('#ActionPermissionValues').val())).Any("$.ActionPermissionName=='Delete'");

    if (hasEditPermission) {
        action = "Edit"
    }
    else if (!hasEditPermission && hasViewPermission) {
        action = "View"
    }
    if (action == "Edit" && hasDeletePermission) {
        $('#btnDelete').show();
    }

    if (action == 'View') {
        $("#formBemsBlock :input:not(:button)").prop("disabled", true);
    } else {
        $('#btnEdit').show();

        $('#btnNextScreenSave').show();
    }
    $('#spnActionType').text(action);

    var primaryId = $('#primaryID').val();

    if (primaryId != null && primaryId != "0") {
        $.get("/api/CLSCorrectiveActionReport/Get/" + primaryId)
            .done(function (result) {
                var getResult = JSON.parse(result);
                fillDetails(getResult);
                disableFields('True');
            })
            .fail(function () {
                $('#myPleaseWait').modal('hide');
                $("div.errormsgcenter").text(Messages.COMMON_FAILURE_MESSAGE);
                $('#errorMsg').css('visibility', 'visible');
            });
    }
    else {
        $('#myPleaseWait').modal('hide');
    }
}
function disableFields(isDisable) {

    if (isDisable == 'True') {

        $("#txtIndicators").prop("disabled", true);
        $("#txtCDate").prop("disabled", true);
        //$("#txtFUC").prop("disabled", true);
        //$("#txtAssignee").prop("disabled", true);
        $("#txtStatus").prop("disabled", false);
        //$("#txtIssuer").prop("disabled", true);        
        //$("#txtCTD").prop("disabled", true);

    }
    else {
        $("#txtIndicators").prop("disabled", false);
        $("#txtCDate").prop("disabled", false);
        $("#txtFUC").prop("disabled", true);
        $("#txtAssignee").prop("disabled", false);
        $("#txtStatus").prop("disabled", true);
        $("#txtIssuer").prop("disabled", false); 
        $("#txtCTD").prop("disabled", false);
        $("#txtVD").prop("disabled", true);
        $("#txtVB").prop("disabled", true);       

    }
}

function fillDetails(result) {

    if (result != null) {


        $("#primaryID").val(result.CARId);       
        $("#txtCARGeneration").val(result.CARGeneration);
        $("#txtCNo").val(result.CARNo);
        $("#txtIndicators").val(result.Indicator);
        var CARDate = getCustomDate(result.CARDate);
        var CARPeriodFrom = getCustomDate(result.CARPeriodFrom);
        var CARPeriodTo = getCustomDate(result.CARPeriodTo);
        $("#txtCDate").val(CARDate);
        $("#txtCPeriodFrom").val(CARPeriodFrom);
        $("#txtCPeriodTo").val(CARPeriodTo);       
        var FollowUpCAR = result.FollowUpCAR;
        if (FollowUpCAR != "") {
            $("#txtFUC").val(FollowUpCAR);
            $("#txtFUC").prop("disabled", true);
        }
        else {
            $("#txtFUC").prop("disabled", false).val('');
        }
        $("#txtAssignee").val(result.Assignee);
        $("#txtPS").val(result.ProblemStatement);
        $("#txtRC").val(result.RootCause);
        $("#txtSolution").val(result.Solution);
        $("#Priority").val(result.Priority);
        $("#txtStatus").val(result.Status);

        var status = $("#txtStatus option:selected").text();
        if (status == 'Closed') {
            $("#btnSave").hide();
            $("#btnSaveandAddNew").hide();
        }
        else {
            $("#btnSave").show();
            $("#btnSaveandAddNew").show();
        }

        $("#txtIssuer").val(result.Issuer);
        var CARTargetDate = getCustomDate(result.CARTargetDate);
        var Verifieddate = getCustomDate(result.VerifiedDate);
        if (CARTargetDate != "") {
            $("#txtCTD").val(CARTargetDate);
            $("#txtCTD").prop("disabled", true);
        }
        else {
            $("#txtCTD").prop("disabled", false).val('');
        }          
        $("#txtVD").val(Verifieddate);
        $("#txtVB").val(result.VerifiedBy);
        $("#txtRemarks").val(result.Remarks);
       

        rowNum1 = 1;
        $("#tbodyActivity").html('');

        if (result.CARActivityList != null) {
            for (var i = 0; i < result.CARActivityList.length; i++) {

                addActivity(rowNum1);
                var Startdate = getCustomDate(result.CARActivityList[i].StartDate);
                var TargetDate = getCustomDate(result.CARActivityList[i].TargetDate);
                var Actualcompletiondate = getCustomDate(result.CARActivityList[i].ActualCompletionDate);

                $('#hdnActivityId' + rowNum1).val(result.CARActivityList[i].CARActivityId);
                $('#txtActivity' + + rowNum1).val(result.CARActivityList[i].Activity);
                $('#txtSD' + rowNum1).val(Startdate);
                $('#txtTD' + rowNum1).val(TargetDate);
                $('#txtACD' + rowNum1).val(Actualcompletiondate);
                $('#txtResponsibility' + rowNum1).val(result.CARActivityList[i].Responsibility);
                $('#txtResponsible' + rowNum1).val(result.CARActivityList[i].ResponsiblePerson);

                rowNum1 += 1;
            }
        }
        else {
            addActivity(rowNum1);
        }

        rowNum2 = 1;
        $("#tbodyAttachments").html('');
        if (result.CARAttachmentList != null) {
            for (var i = 0; i < result.CARAttachmentList.length; i++) {

                addAttachment(rowNum2);
              
                $('#hdnAttachmentId' + rowNum2).val(result.CARAttachmentList[i].AttachmentId);
                $('#ddlFileType' + rowNum2).val(result.CARAttachmentList[i].FileType);
                $('#txtFileName' + rowNum2).val(result.CARAttachmentList[i].FileName);
                //$('#txtAttachment' + rowNum2).val(result.CARAttachmentList[i].AttachmentName);        
                $('#fileAttachment' + rowNum2).val(result.CARAttachmentList[i].AttachmentName);
                var FilePath = result.CARAttachmentList[i].FilePath
                $('#cell' + rowNum2).append(
                    '<a href="' + FilePath + '" style="color:cornflowerblue" download="" id="icon' + rowNum2 + '"><span style="text-align:center"><i class="fa fa-download" style="font-size:15px;"></i></span> </a>'
                );
                rowNum2 += 1;
            }
        }
        else {
            addAttachment(rowNum2);
        }

        
    }
}

function addActivity(num) {

    var CheckBox = '<td style="text-align:center"> <input type="checkbox" id="isDelete' + num + '" name="isDelete"><input type="hidden" id="hdnActivityId' + num + '" value="0" /></td>';
    var activity = '<td> <input type="text" required class="form-control" id="txtActivity' + num + '" autocomplete="off" name="Activity" maxlength="25"  /></td>';
    var startdate = '<td> <input type="text" required class="form-control datetime" id="txtSD' + num + '"  autocomplete="off" name="StartDate" maxlength="25"  /></td>';
    var TargetDate = '<td> <input type="text" required class="form-control datetime" id="txtTD' + num + '" autocomplete="off" name="TargetDate" maxlength="25"  /></td>';
    var ActualCompletion = '<td> <input type="text" class="form-control datetime" disabled id="txtACD' + num + '" autocomplete="off"  name="ActualCompletion" maxlength="25"  /></td>';
    var Responsibility = '<td> <select type="text" class="form-control Response" id="txtResponsibility' + num + '" autocomplete="off" name="Responsibility" maxlength="25" > ' + ResponsibilityValues + ' </select></td>';
    var ResponsiblePerson = '<td> <input type="text" class="form-control responsiblepersoncode1" placeholder="please select" id="txtResponsible' + num + '" autocomplete="off"  name="ResposiblePerson" maxlength="25"  /><input type = "hidden" id="hdnresponsibleId' + num + '" />   <div class="col-sm-12" id="divFetchId' + num + '">   </div></td>';

    $("#tbodyActivity").append('<tr>' + CheckBox + activity + startdate + TargetDate + ActualCompletion + Responsibility + ResponsiblePerson + '</tr>');


    var a = $('#status' + ' option:selected').text();
    if (a == "Open") {       
        $('[name="ActualCompletion"]').prop("disabled", true);
    }
    else {       
        $('[name="ActualCompletion"]').prop("disabled", false);
    }

}

function getCustomDate(date) {

    if (date == '' || date == null) {
        return '';
    }
    else {
        let monthNames = ["Zero", "Jan", "Feb", "Mar", "Apr",
            "May", "Jun", "Jul", "Aug",
            "Sep", "Oct", "Nov", "Dec"];

        var day = date.slice(8, 10);
        var monthindex = date.slice(5, 7);
        if (monthindex >= 10) {
            var month = monthNames[date.slice(5, 7)];
        }
        else {
            var month = monthNames[date.slice(6, 7)];
        }
        var year = date.slice(0, 4);
        return day + "-" + month + "-" + year;
    }
}

function addAttachment(num) {

    var CheckBox = '<td style="text-align:center"><input type="checkbox" id="isDelete' + num + '" name="isDelete" />	<input type="hidden" id="hdnAttachmentId' + num + '" value="0" /></td>';
    var FileType = '<td id="filetypee"> <select type="text" required class="form-control" id="ddlFileType' + num + '" autocomplete="off" name="FileType" maxlength="25" >    ' + FileTypeValues + '</td>';
    var FileName = '<td id="fname"><input type="text" required class="form-control" id="txtFileName' + num + '" autocomplete="off" name="FileName" maxlength="25"  /></td>';
    var Attachment = '<td id="attachment"> <input type="file" id="txtAttachment' + num + '" name="fileAttachment" required class="form-control fileAttachment" /></td>';
    var Download = '<td style="text-align:center" id="cell' + num + '">  </td>';

    $("#tbodyAttachments").append('<tr>' + CheckBox + FileType + FileName + Attachment + Download + '</tr>');
}

function AutogeneratedCode() {

    $.get("/api/CLSCorrectiveActionReport/AutoGeneratedCode", function (response) {

        var result = JSON.parse(response); 
        var DocmentNo = result.CARNo;        
        $('#txtCNo').val(DocmentNo);
        $("#txtIndicators").html('');
        $("#txtIndicators").append("<option value='' Selected>" + "Select" + "</option>");
        var IndicatorValues = "";
        for (var i = 0; i < result.AutoDisplay.length; i++) {
            IndicatorValues += "<option value=" + result.AutoDisplay[i].Indicator + ">" + result.AutoDisplay[i].Indicator + "</option>"
        }
        $("#txtIndicators").append(IndicatorValues);
    });
}

function ClearFields() {
    $(".content").scrollTop(0);
    $('#formHistory')[0].reset();
    $('#History').remove();
    $('#selQAPIndicatorIdHistory').append('<option value="">' + "Select" + '</option>');
    $('.tablerow1').remove();
}

function AddHistoryDetails() {

    var StatusValue = '<td><input type="text" required class="form-control" id="txtCARStatus1"  disabled="disabled" autocomplete="off" name="Solution" maxlength="25" /></td>';
    var RootCause = '<td><input type="text" required class="form-control" id="txtRootCause1" disabled="disabled" autocomplete="off" name="CARStatus" maxlength="25" /></td>';
    var Solution = '<td><input type="text" required class="form-control" id="txtSolution1"  disabled="disabled" autocomplete="off" name="RootCause" maxlength="25" /></td>';
    var Remarks = '<td><input type="text" required class="form-control" id="txtRemarks1"  disabled="disabled" autocomplete="off" name="Remarks" maxlength="25" /></td>';
    $("#tableHistory tbody").append('<tr class="tablerow1">' + StatusValue + RootCause + Solution + Remarks + '</tr>');
}