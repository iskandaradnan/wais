name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: [self-hosted, onpremdti]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install xmllint
        run: | 
         whoami
         sudo apt-get install -y libxml2-utils
        
      - name: Install mono
        run: |
         sudo apt install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
         sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
         sudo apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-focal main'
         sudo apt install -y mono-complete 
      - name: Install nuget
        run: sudo apt-get -y install nuget
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
       # shell: powershell
        run: |
          mkdir -p .sonar/scanner 
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #shell: powershell
        run: |
          nuget restore MasterDashboard.sln
          .sonar/scanner/dotnet-sonarscanner /k:"wais" /d:sonar.host.url="http://10.249.33.66:9000"  /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          msbuild UETrack.Application.Web.sln /t:Rebuild
          .sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
